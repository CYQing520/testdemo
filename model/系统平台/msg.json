{
    "tabmsg": [{
        "titleicon": "&#xe703;",
        "titlename": "主页",
        "secontab": [{
            "name": "主页",
            "link": "home.html"
        }, {
            "name": "信息",
            "link": "mail.html"
        }]
    }, {
        "titleicon": "&#xe6de;",
        "titlename": "记录",
        "secontab": [{
            "name": "记录1",
            "link": "test.html"
        }, {
            "name": "记录2",
            "link": "home.html"
        }]
    }, {
        "titleicon": "&#xe6f5;",
        "titlename": "图表",
        "secontab": [{
            "name": "折线图",
            "link": "chartLine.html"
        }, {
            "name": "柱状图",
            "link": "chartBar.html"
        }, {
            "name": "饼状图",
            "link": "chartPie.html"
        }]
    }, {
        "titleicon": "&#xe717;",
        "titlename": "图片",
        "secontab": [{
            "name": "折线图",
            "link": "chartLine.html"
        }, {
            "name": "柱状图",
            "link": "chartBar.html"
        }, {
            "name": "饼状图",
            "link": "chartPie.html"
        }]
    }, {
        "titleicon": "&#xe729;",
        "titlename": "设置",
        "secontab": [{
            "name": "个人信息",
            "link": "personmsg.html"
        }, {
            "name": "密码修改",
            "link": "personpwd.html"
        }, {
            "name": "设置头像",
            "link": "personimg.html"
        }]
    }, {
        "titleicon": "&#xe734;",
        "titlename": "文档",
        "secontab": [{
            "name": "折线图",
            "link": "chartLine.html"
        }, {
            "name": "柱状图",
            "link": "chartBar.html"
        }, {
            "name": "饼状图",
            "link": "chartPie.html"
        }]
    }, {
        "titleicon": "&#xe73f;",
        "titlename": "模块",
        "secontab": [{
            "name": "折线图",
            "link": "chartLine.html"
        }, {
            "name": "柱状图",
            "link": "chartBar.html"
        }, {
            "name": "饼状图",
            "link": "chartPie.html"
        }]
    }, {
        "titleicon": "&#xe6ef;",
        "titlename": "项目",
        "secontab": [{
            "name": "项目列表",
            "link": "objList.html"
        }]
    }, {
        "titleicon": "&#xe70c;",
        "titlename": "菜单",
        "secontab": [{
            "name": "菜单列表",
            "link": "orderList.html"
        }]
    }],
    "mailmsg": [{
        "sendperson": "发件人1",
        "title": "标题1标题1标题1标题1标题1标题1标题1标题1标题1标题1标题1标题1",
        "time": "2019/02/15 16:24:00",
        "msg": "层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。\nCSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。",
        "dataid": 1
    }, {
        "sendperson": "发件人2",
        "title": "标题2标题2标题2标题2标题2标题2标题2标题2标题2标题2标题2标题2",
        "time": "2019/02/15 16:24:00",
        "msg": "1990年，Tim Berners-Lee和Robert Cailliau共同发明了Web。1994年，Web真正走出实验室。\n从HTML被发明开始，样式就以各种形式存在。不同的浏览器结合它们各自的样式语言为用户提供页面效果的控制。最初的HTML只包含很少的显示属性。",
        "dataid": 2
    }, {
        "sendperson": "发件人3",
        "title": "标题3标题3标题3标题3标题3标题3标题3标题3标题3标题3标题3标题3",
        "time": "2019/02/15 16:24:00",
        "msg": "随着HTML的成长，为了满足页面设计者的要求，HTML添加了很多显示功能。但是随着这些功能的增加，HTML变的越来越杂乱，而且HTML页面也越来越臃肿。于是CSS便诞生了。\n1994年哈坤·利提出了CSS的最初建议。而当时伯特·波斯（Bert Bos）正在设计一个名为Argo的浏览器，于是他们决定一起设计CSS。",
        "dataid": 3
    }, {
        "sendperson": "发件人4",
        "title": "标题4标题4标题4标题4标题4标题4标题4标题4标题4标题4标题4标题4",
        "time": "2019/02/15 16:24:00",
        "msg": "其实当时在互联网界已经有过一些统一样式表语言的建议了，但CSS是第一个含有“层叠”丰意的样式表语言。在CSS中，一个文件的样式可以从其他的样式表中继承。读者在有些地方可以使用他自己更喜欢的样式，在其他地方则继承或“层叠”作者的样式。这种层叠的方式使作者和读者都可以灵活地加入自己的设计，混合每个人的爱好。\n哈坤于1994年在芝加哥的一次会议上第一次提出了CSS的建议，1995年的www网络会议上CSS又一次被提出，博斯演示了Argo浏览器支持CSS的例子，哈肯也展示了支持CSS的Arena浏览器。",
        "dataid": 4
    }, {
        "sendperson": "发件人5",
        "title": "标题5标题5标题5标题5标题5标题5标题5标题5标题5标题5标题5标题5",
        "time": "2019/02/15 16:24:00",
        "msg": "同年，W3C组织（World WideWeb Consortium）成立，CSS的创作成员全部成为了W3C的工作小组并且全力以赴负责研发CSS标准，层叠样式表的开发终于走上正轨。有越来越多的成员参与其中，例如微软公司的托马斯·莱尔顿(Thomas Reaxdon)，他的努力最终令Internet Explorer浏览器支持CSS标准。哈坤、波斯和其他一些人是这个项目的主要技术负责人。1996年底，CSS初稿已经完成，同年12月，层叠样式表的第一份正式标准（Cascading style Sheets Level 1）完成，成为w3c的推荐标准。\n1997年初，W3C组织负责CSS的工作组开始讨论第一版中没有涉及到的问题。其讨论结果组成了1998年5月出版的CSS规范第二版。",
        "dataid": 5
    }, {
        "sendperson": "发件人6",
        "title": "标题6标题6标题6标题6标题6标题6标题6标题6标题6标题6标题6标题6",
        "time": "2019/02/15 16:24:00",
        "msg": "丰富的样式定义\nCSS提供了丰富的文档样式外观，以及设置文本和背景属性的能力；允许为任何元素创建边框，以及元素边框与其他元素间的距离，以及元素边框与元素内容间的距离；允许随意改变文本的大小写方式、修饰方式以及其他页面效果。",
        "dataid": 6
    }, {
        "sendperson": "发件人7",
        "title": "标题7标题7标题7标题7标题7标题7标题7标题7标题7标题7标题7标题7",
        "time": "2019/02/15 16:24:00",
        "msg": "易于使用和修改\nCSS可以将样式定义在HTML元素的style属性中，也可以将其定义在HTML文档的header部分，也可以将样式声明在一个专门的CSS文件中，以供HTML页面引用。总之，CSS样式表可以将所有的样式声明统一存放，进行统一管理。\n另外，可以将相同样式的元素进行归类，使用同一个样式进行定义，也可以将某个样式应用到所有同名的HTML标签中，也可以将一个CSS样式指定到某个页面元素中。如果要修改样式，我们只需要在样式列表中找到相应的样式声明进行修改。",
        "dataid": 7
    }, {
        "sendperson": "发件人8",
        "title": "标题8标题8标题8标题8标题8标题8标题8标题8标题8标题8标题8标题8",
        "time": "2019/02/15 16:24:00",
        "msg": "多页面应用\nCSS样式表可以单独存放在一个CSS文件中，这样我们就可以在多个页面中使用同一个CSS样式表。CSS样式表理论上不属于任何页面文件，在任何页面文件中都可以将其引用。这样就可以实现多个页面风格的统一。",
        "dataid": 8
    }, {
        "sendperson": "发件人9",
        "title": "标题9标题9标题9标题9标题9标题9标题9标题9标题9标题9标题9标题9",
        "time": "2019/02/15 16:24:00",
        "msg": "层叠\n简单的说，层叠就是对一个元素多次设置同一个样式，这将使用最后一次设置的属性值。例如对一个站点中的多个页面使用了同一套CSS样式表，而某些页面中的某些元素想使用其他样式，就可以针对这些样式单独定义一个样式表应用到页面中。这些后来定义的样式将对前面的样式设置进行重写，在浏览器中看到的将是最后面设置的样式效果。",
        "dataid": 9
    }, {
        "sendperson": "发件人10",
        "title": "标题10标题10标题10标题10标题10标题10标题10标题10标题10标题10标题10",
        "time": "2019/02/15 16:24:00",
        "msg": "页面压缩\n在使用HTML定义页面效果的网站中，往往需要大量或重复的表格和font元素形成各种规格的文字样式，这样做的后果就是会产生大量的HTML标签，从而使页面文件的大小增加。而将样式的声明单独放到CSS样式表中，可以大大的减小页面的体积，这样在加载页面时使用的时间也会大大的减少。另外，CSS样式表的复用更大程度的缩减了页面的体积，减少下载的时间。",
        "dataid": 10
    }, {
        "sendperson": "发件人11",
        "title": "标题11标题11标题11标题11标题11标题11标题11标题11标题11标题11标题11",
        "time": "2019/02/15 16:24:00",
        "msg": "CSS是一种定义样式结构如字体、颜色、位置等的语言，被用于描述网页上的信息格式化和现实的方式。CSS样式可以直接存储于HTML网页或者单独的样式单文件。无论哪一种方式，样式单包含将样式应用到指定类型的元素的规则。外部使用时，样式单规则被放置在一个带有文件扩展名_css的外部样式单文档中。\n样式规则是可应用于网页中元素，如文本段落或链接的格式化指令。样式规则由一个或多个样式属性及其值组成。内部样式单直接放在网页中，外部样式单保存在独立的文档中，网页通过一个特殊标签链接外部样式单。\n名称CSS中的“层叠（cascading）”表示样式单规则应用于HTML文档元素的方式。具体地说，CSS样式单中的样式形成一个层次结构，更具体的样式覆盖通用样式。样式规则的优先级由CSS根据这个层次结构决定，从而实现级联效果。",
        "dataid": 11
    }, {
        "sendperson": "发件人12",
        "title": "标题12标题12标题12标题12标题12标题12标题12标题12标题12标题12标题12",
        "time": "2019/02/15 16:24:00",
        "msg": "属性\n属性的名字是一个合法的标识符，它们是CSS语法中的关键字。一种属性规定了格式修饰的一个方面。例如：color是文本的颜色属性，而text-indent则规定了段落的缩进。\n要掌握一个属性的用法，有六个方面需要了解。具体叙述如下：\n①该属性的合法属性值（legal value）。显然段落缩进属性text-indent只能赋给一个表示长度的值，而表示背景图案的background．image属性则应该取一个表示图片位置链接的值或者是关键字none表示不用背景图案。\n②该属性的默认值（initial value）。当在样式表单中没有规定该属性，而且该属性不能从它的父级元素那儿继承的时候，则浏览器将认为该属性取它的默认值。\n③该属性所适用的元素（Applies to）。有的属性只适用于某些个别的元素，比如white-space属性就只适用于块级元素。white-space属性可以取normal、pre和nowrap三个值。当取normal的时候，浏览器将忽略掉连续的空白字符，而只显示一个空白字符。当取pre的时候，则保留连续的空白字符。而取nowrap的时候，连续的空白字符被忽略，而且不自动换行。\n④该属性的值是否被下一级继承（inherited）。\n⑤如果该属性能取百分值（percentage），那么该百分值将如何解释。也就是百分值所相对的标准是什么。如margin属性可以取百分值，它是相对于margin所存元素的容器的宽度。\n⑥该属性所属的媒介类型组（media groups）。",
        "dataid": 12
    }, {
        "sendperson": "发件人13",
        "title": "标题13标题13标题13标题13标题13标题13标题13标题13标题13标题13标题13",
        "time": "2019/02/15 16:24:00",
        "msg": "属性值\n①整数和实数\n这和普通意义上的整数和实数没有多大区别。在CSS中只能使用浮点小数，而不能像其他编程语言那样使用科学记数法表示实数，即1.2E3在CSS中将是不合法的。下面是几个正确的例子，整数：128、-313，实数：12.20、1415、-12.03。\n②长度量\n一个长度量由整数或实数加上相应的长度单位组成。长度量常用来对元素定位。而定位分为绝对定位和相对定位，因而长度单位也分为相对长度单位和绝对长度单位。\n相对长度单位有：em——当前字体的高度，也就是font.size属性的值；ex——当前字体中小写字母x的高度；Dx——一个像素的长度，其实际的长度由显示器的设置决定，比如在800木600的设置下，一个像素的长度就等于屏幕的宽度除以800。\n另一一点值得注意的是，子级元素不继承父级元素的相对长度值，只继承它们的实际计算值。\n③百分数量（percentages）\n百分数量就是数字加上百分号。显然，百分数量总是相对的，所以和相对长度量一样，百分数量不被子级元素继承。",
        "dataid": 13
    }, {
        "sendperson": "发件人14",
        "title": "标题14标题14标题14标题14标题14标题14标题14标题14标题14标题14标题14",
        "time": "2019/02/15 16:24:00",
        "msg": "类型选择器\nCSS中的一种选择器是元素类型的名称。使用这种选择器(称为类型选择器)，可以向这种元素类型的每个实例上应用声明。",
        "dataid": 14
    }, {
        "sendperson": "发件人15",
        "title": "标题15标题15标题15标题15标题15标题15标题15标题15标题15标题15标题15",
        "time": "2019/02/15 16:24:00",
        "msg": "简单属性选择器\nCLASS属性\nCLASS属性允许向一组在CLASS属性上具有相同值的元素应用声明。BODY内的所有元素都有CLASS属性。从本质上讲，可以使用CLASS属性来分类元素，在样式表中创建规则来引用CLASS属性的值，然后浏览器自动将这些属性应用到该组元素。\n类选择器以标志符（句点）开头，用于指示后面是哪种类型的选择器。对于类选择器，之所以选择句点是因为在很多编程语言中它与术语“类”相关联。翻译成英语，标志符表示“带有类名的元素”。\nID属性\nID属性的操作类似于CLASS属性，但有一点重要的不同之处：ID属性的值在整篇文档中必须是唯一的。这使得ID属性可用于设置单个元素的样式规则。包含ID属性的选择器称为ID选择器。\n需要注意的是，ID选择器的标志符是散列符号（#）。标志符用来提醒浏览器接下来出现的是ID值。\nSTYLE属性\n尽管在选择器中可以使用CLASS和ID属性值，STYLE属性实际上可以替代整个选择器机制。不是只具有一个能够在选择器中引用的值(这正是ID和CLASS具有的值)，STYLE属性的值实际上是一个或多个CSS声明。\n通常情况下，使用CSS，设计者将把所有的样式规则置于一个样式表中，该样式表位于文档顶部的STYLE元素内（或在外部进行链接）。但是，使用STYLE属性能够绕过样式表将声明直接放置到文档的开始标记中。\n组合选择器类型\n可以将类型选择器、ID选择器和类选择器组合成不同的选择器类型来构成更复杂的选择器。通过组合选择器，可以更加精确地处理希望赋予某种表示的元素。例如，要组合类型选择器和类选择器，一个元素必须满足两个要求：它必须是正确的类型和正确的类以便使样式规则可以作用于它。\n外部信息：伪类和伪元素\n在CSS1中，样式通常是基于在HTML源代码中出现的标记和属性。对于很多设计情景而言这种做法完全可行，但是它无法实现设计者希望获得的一些常见的设计效果。\n设计伪类和伪元素可以实现其中的一些效果。这两种机制扩充了CSS的表现能力。在CSS1中，使用伪类可以根据一些情况改变文档中链接的样式，如根据链接是否被访问，何时被访问以及用户和文档的交互方式来应用改变。借助于伪元素，可以更改元素的第一个字母和第一行的样式，或者添加源文档中没有出现过的元素。\n伪类和伪元素都不存在于HTML；也就是说，它们在HTML代码中是不可见的。这两种机制都得到了精心设计以便能够在CSS以后的版本中做进一步地扩充；也就是说实现更多的效果。",
        "dataid": 15
    }, {
        "sendperson": "发件人16",
        "title": "标题16标题16标题16标题16标题16标题16标题16标题16标题16标题16标题16",
        "time": "2019/02/15 16:24:00",
        "msg": "在CSS 2.1规范中，识别符（包括选择符中的元素名、类、ID）只能包含A～Z、a～z、0～9等字符，加上连字符“-”、下划线“_”。识别符不能以数字开头，以连字符和下划线开头也是不允许的。只有属性、属性值、单位、伪类、伪元素和“@”规则可以由连字符“-”开头。同时，其他元素名称、类和ID标识符也不允许用连字符开头。",
        "dataid": 16
    }, {
        "sendperson": "发件人17",
        "title": "标题17标题17标题17标题17标题17标题17标题17标题17标题17标题17标题17",
        "time": "2019/02/15 16:24:00",
        "msg": "层叠样式表（Cascading Style Sheet，CSS）有助于实现负责任的Web设计。CSS对开发者构建Web站点的影响很大，并且这种影响可能是无止境的。将网页的大部分甚至是全部的表示信息从（X）HTML文件中移出，并将它们保留在一个样式表中有诸多优点，如降低文件大小、节省网络带宽以及易于维护等。此外，站点的表现信息和核心内容相分离，使得站点的设计人员能够在短暂的时间内对整个网站进行各种各样的修改。\nCSS简化了网页的格式代码，外部的样式表还会被浏览器保存在缓存里，加快了下载显示的速度，也减少了需要上传的代码数量（因为重复设置的格式将被只保存一次）。只要修改保存着网站格式的CSs样式表文件就町以改变整个站点的风格特色，在修改页面数量庞大的站点时，显得格外有用。这就避免了一个个网页的修改，大大减少了工作量。",
        "dataid": 17
    }],
    "personmsg": [{
        "personimg": "./img/personimg.png",
        "personname": "personname111",
        "personname2": "personname2111",
        "tellnum": "tellnum111",
        "mail": "mail111",
        "sex": "sex111",
        "job": "job111",
        "ip": "ip111",
        "more": "more111"
    }]
}